.. _envoy_api_file_envoy/config/filter/http/aws_lambda/v2alpha/aws_lambda.proto:

AWS Lambda
==========

.. _extension_envoy.filters.http.aws_lambda:


This extension may be referenced by the qualified name *envoy.filters.http.aws_lambda*

.. note::
  This extension is functional but has not had substantial production burn time, use only with this caveat.

  This extension is not hardened and should only be used in deployments where both the downstream and upstream are trusted.

.. warning::
   This API is work-in-progress and is subject to breaking changes.

AWS Lambda :ref:`configuration overview <config_http_filters_aws_lambda>`.

.. _envoy_api_msg_config.filter.http.aws_lambda.v2alpha.Config:

config.filter.http.aws_lambda.v2alpha.Config
--------------------------------------------

`[config.filter.http.aws_lambda.v2alpha.Config proto] <https://github.com/envoyproxy/envoy/blob/82e4b26a23f807a75182c2d8f76f980be9bb09b0/api/envoy/config/filter/http/aws_lambda/v2alpha/aws_lambda.proto#L21>`_

AWS Lambda filter config

.. code-block:: json

  {
    "arn": "...",
    "payload_passthrough": "..."
  }

.. _envoy_api_field_config.filter.http.aws_lambda.v2alpha.Config.arn:

arn
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The ARN of the AWS Lambda to invoke when the filter is engaged
  Must be in the following format:
  arn:<partition>:lambda:<region>:<account-number>:function:<function-name>
  
  
.. _envoy_api_field_config.filter.http.aws_lambda.v2alpha.Config.payload_passthrough:

payload_passthrough
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Whether to transform the request (headers and body) to a JSON payload or pass it as is.
  
  


.. _envoy_api_msg_config.filter.http.aws_lambda.v2alpha.PerRouteConfig:

config.filter.http.aws_lambda.v2alpha.PerRouteConfig
----------------------------------------------------

`[config.filter.http.aws_lambda.v2alpha.PerRouteConfig proto] <https://github.com/envoyproxy/envoy/blob/82e4b26a23f807a75182c2d8f76f980be9bb09b0/api/envoy/config/filter/http/aws_lambda/v2alpha/aws_lambda.proto#L33>`_

Per-route configuration for AWS Lambda. This can be useful when invoking a different Lambda function or a different
version of the same Lambda depending on the route.

.. code-block:: json

  {
    "invoke_config": "{...}"
  }

.. _envoy_api_field_config.filter.http.aws_lambda.v2alpha.PerRouteConfig.invoke_config:

invoke_config
  (:ref:`config.filter.http.aws_lambda.v2alpha.Config <envoy_api_msg_config.filter.http.aws_lambda.v2alpha.Config>`) 
  

