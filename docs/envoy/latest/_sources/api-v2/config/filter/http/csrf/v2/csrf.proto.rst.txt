.. _envoy_api_file_envoy/config/filter/http/csrf/v2/csrf.proto:

CSRF
====

Cross-Site Request Forgery :ref:`configuration overview <config_http_filters_csrf>`.

.. _envoy_api_msg_config.filter.http.csrf.v2.CsrfPolicy:

config.filter.http.csrf.v2.CsrfPolicy
-------------------------------------

`[config.filter.http.csrf.v2.CsrfPolicy proto] <https://github.com/envoyproxy/envoy/blob/fa0b52a874b67c857bd314620592d39280767330/api/envoy/config/filter/http/csrf/v2/csrf.proto#L18>`_

CSRF filter config.

.. code-block:: json

  {
    "filter_enabled": "{...}",
    "shadow_enabled": "{...}"
  }

.. _envoy_api_field_config.filter.http.csrf.v2.CsrfPolicy.filter_enabled:

filter_enabled
  (:ref:`core.RuntimeFractionalPercent <envoy_api_msg_core.RuntimeFractionalPercent>`, *REQUIRED*) Specify if CSRF is enabled.
  
  More information on how this can be controlled via runtime can be found
  :ref:`here <csrf-runtime>`.
  
  .. note::
  
    This field defaults to 100/:ref:`HUNDRED
    <envoy_api_enum_type.FractionalPercent.DenominatorType>`.
  
  
.. _envoy_api_field_config.filter.http.csrf.v2.CsrfPolicy.shadow_enabled:

shadow_enabled
  (:ref:`core.RuntimeFractionalPercent <envoy_api_msg_core.RuntimeFractionalPercent>`) Specifies that CSRF policies will be evaluated and tracked, but not enforced.
  This is intended to be used when filter_enabled is off.
  
  More information on how this can be controlled via runtime can be found
  :ref:`here <csrf-runtime>`.
  
  .. note::
  
    This field defaults to 100/:ref:`HUNDRED
    <envoy_api_enum_type.FractionalPercent.DenominatorType>`.
  
  

