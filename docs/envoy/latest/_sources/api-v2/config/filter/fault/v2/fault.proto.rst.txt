.. _envoy_api_file_envoy/config/filter/fault/v2/fault.proto:

Common fault injection types
============================


.. _envoy_api_msg_config.filter.fault.v2.FaultDelay:

config.filter.fault.v2.FaultDelay
---------------------------------

`[config.filter.fault.v2.FaultDelay proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/config/filter/fault/v2/fault.proto#L20>`_

Delay specification is used to inject latency into the
HTTP/gRPC/Mongo/Redis operation or delay proxying of TCP connections.

.. code-block:: json

  {
    "type": "...",
    "fixed_delay": "{...}",
    "percentage": "{...}"
  }

.. _envoy_api_field_config.filter.fault.v2.FaultDelay.type:

type
  (:ref:`config.filter.fault.v2.FaultDelay.FaultDelayType <envoy_api_enum_config.filter.fault.v2.FaultDelay.FaultDelayType>`) Delay type to use (fixed|exponential|..). Currently, only fixed delay (step function) is
  supported.
  
  
.. _envoy_api_field_config.filter.fault.v2.FaultDelay.fixed_delay:

fixed_delay
  (`Duration <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration>`_, *REQUIRED*) Add a fixed delay before forwarding the operation upstream. See
  https://developers.google.com/protocol-buffers/docs/proto3#json for
  the JSON/YAML Duration mapping. For HTTP/Mongo/Redis, the specified
  delay will be injected before a new request/operation. For TCP
  connections, the proxying of the connection upstream will be delayed
  for the specified period. This is required if type is FIXED.
  
  
  
.. _envoy_api_field_config.filter.fault.v2.FaultDelay.percentage:

percentage
  (:ref:`type.FractionalPercent <envoy_api_msg_type.FractionalPercent>`) The percentage of operations/connections/requests on which the delay will be injected.
  
  

.. _envoy_api_enum_config.filter.fault.v2.FaultDelay.FaultDelayType:

Enum config.filter.fault.v2.FaultDelay.FaultDelayType
-----------------------------------------------------

`[config.filter.fault.v2.FaultDelay.FaultDelayType proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/config/filter/fault/v2/fault.proto#L21>`_


.. _envoy_api_enum_value_config.filter.fault.v2.FaultDelay.FaultDelayType.FIXED:

FIXED
  *(DEFAULT)* ‚Å£Fixed delay (step function).
  
  

.. _envoy_api_msg_config.filter.fault.v2.FaultRateLimit:

config.filter.fault.v2.FaultRateLimit
-------------------------------------

`[config.filter.fault.v2.FaultRateLimit proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/config/filter/fault/v2/fault.proto#L49>`_

Describes a rate limit to be applied.

.. code-block:: json

  {
    "fixed_limit": "{...}",
    "percentage": "{...}"
  }

.. _envoy_api_field_config.filter.fault.v2.FaultRateLimit.fixed_limit:

fixed_limit
  (:ref:`config.filter.fault.v2.FaultRateLimit.FixedLimit <envoy_api_msg_config.filter.fault.v2.FaultRateLimit.FixedLimit>`, *REQUIRED*) A fixed rate limit.
  
  
  
.. _envoy_api_field_config.filter.fault.v2.FaultRateLimit.percentage:

percentage
  (:ref:`type.FractionalPercent <envoy_api_msg_type.FractionalPercent>`) The percentage of operations/connections/requests on which the rate limit will be injected.
  
  
.. _envoy_api_msg_config.filter.fault.v2.FaultRateLimit.FixedLimit:

config.filter.fault.v2.FaultRateLimit.FixedLimit
------------------------------------------------

`[config.filter.fault.v2.FaultRateLimit.FixedLimit proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/config/filter/fault/v2/fault.proto#L51>`_

Describes a fixed/constant rate limit.

.. code-block:: json

  {
    "limit_kbps": "..."
  }

.. _envoy_api_field_config.filter.fault.v2.FaultRateLimit.FixedLimit.limit_kbps:

limit_kbps
  (`uint64 <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The limit supplied in KiB/s.
  
  


