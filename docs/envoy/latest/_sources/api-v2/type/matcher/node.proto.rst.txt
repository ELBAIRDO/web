.. _envoy_api_file_envoy/type/matcher/node.proto:

Node matcher
============


.. _envoy_api_msg_type.matcher.NodeMatcher:

type.matcher.NodeMatcher
------------------------

`[type.matcher.NodeMatcher proto] <https://github.com/envoyproxy/envoy/blob/0c9e7bfd887b9668507c7ab8e45c7100b7072b57/api/envoy/type/matcher/node.proto#L18>`_

Specifies the way to match a Node.
The match follows AND semantics.

.. code-block:: json

  {
    "node_id": "{...}",
    "node_metadatas": []
  }

.. _envoy_api_field_type.matcher.NodeMatcher.node_id:

node_id
  (:ref:`type.matcher.StringMatcher <envoy_api_msg_type.matcher.StringMatcher>`) Specifies match criteria on the node id.
  
  
.. _envoy_api_field_type.matcher.NodeMatcher.node_metadatas:

node_metadatas
  (**repeated** :ref:`type.matcher.StructMatcher <envoy_api_msg_type.matcher.StructMatcher>`) Specifies match criteria on the node metadata.
  
  

