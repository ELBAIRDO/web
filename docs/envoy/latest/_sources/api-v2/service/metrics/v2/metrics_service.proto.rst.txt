.. _envoy_api_file_envoy/service/metrics/v2/metrics_service.proto:

envoy/service/metrics/v2/metrics_service.proto
==============================================

.. _envoy_api_msg_service.metrics.v2.StreamMetricsResponse:

service.metrics.v2.StreamMetricsResponse
----------------------------------------

`[service.metrics.v2.StreamMetricsResponse proto] <https://github.com/envoyproxy/envoy/blob/a2ed0caebf67409aabc3ac71b6e3bea676b7cbe9/api/envoy/service/metrics/v2/metrics_service.proto#L24>`_


.. code-block:: json

  {}




.. _envoy_api_msg_service.metrics.v2.StreamMetricsMessage:

service.metrics.v2.StreamMetricsMessage
---------------------------------------

`[service.metrics.v2.StreamMetricsMessage proto] <https://github.com/envoyproxy/envoy/blob/a2ed0caebf67409aabc3ac71b6e3bea676b7cbe9/api/envoy/service/metrics/v2/metrics_service.proto#L27>`_


.. code-block:: json

  {
    "identifier": "{...}",
    "envoy_metrics": []
  }

.. _envoy_api_field_service.metrics.v2.StreamMetricsMessage.identifier:

identifier
  (:ref:`service.metrics.v2.StreamMetricsMessage.Identifier <envoy_api_msg_service.metrics.v2.StreamMetricsMessage.Identifier>`) Identifier data effectively is a structured metadata. As a performance optimization this will
  only be sent in the first message on the stream.
  
  
.. _envoy_api_field_service.metrics.v2.StreamMetricsMessage.envoy_metrics:

envoy_metrics
  (.io.prometheus.client.MetricFamily) A list of metric entries
  
  
.. _envoy_api_msg_service.metrics.v2.StreamMetricsMessage.Identifier:

service.metrics.v2.StreamMetricsMessage.Identifier
--------------------------------------------------

`[service.metrics.v2.StreamMetricsMessage.Identifier proto] <https://github.com/envoyproxy/envoy/blob/a2ed0caebf67409aabc3ac71b6e3bea676b7cbe9/api/envoy/service/metrics/v2/metrics_service.proto#L28>`_


.. code-block:: json

  {
    "node": "{...}"
  }

.. _envoy_api_field_service.metrics.v2.StreamMetricsMessage.Identifier.node:

node
  (:ref:`core.Node <envoy_api_msg_core.Node>`, *REQUIRED*) The node sending metrics over the stream.
  
  


