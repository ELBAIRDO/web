.. _envoy_v3_api_file_envoy/service/metrics/v3/metrics_service.proto:

Metrics service
===============


.. _envoy_v3_api_msg_service.metrics.v3.StreamMetricsResponse:

service.metrics.v3.StreamMetricsResponse
----------------------------------------

`[service.metrics.v3.StreamMetricsResponse proto] <https://github.com/envoyproxy/envoy/blob/e29e3c0569c548e267f153ec20f4032b09f001a8/api/envoy/service/metrics/v3/metrics_service.proto#L29>`_


.. code-block:: json

  {}




.. _envoy_v3_api_msg_service.metrics.v3.StreamMetricsMessage:

service.metrics.v3.StreamMetricsMessage
---------------------------------------

`[service.metrics.v3.StreamMetricsMessage proto] <https://github.com/envoyproxy/envoy/blob/e29e3c0569c548e267f153ec20f4032b09f001a8/api/envoy/service/metrics/v3/metrics_service.proto#L34>`_


.. code-block:: json

  {
    "identifier": "{...}",
    "envoy_metrics": []
  }

.. _envoy_v3_api_field_service.metrics.v3.StreamMetricsMessage.identifier:

identifier
  (:ref:`service.metrics.v3.StreamMetricsMessage.Identifier <envoy_v3_api_msg_service.metrics.v3.StreamMetricsMessage.Identifier>`) Identifier data effectively is a structured metadata. As a performance optimization this will
  only be sent in the first message on the stream.
  
  
.. _envoy_v3_api_field_service.metrics.v3.StreamMetricsMessage.envoy_metrics:

envoy_metrics
  (**repeated** .io.prometheus.client.MetricFamily) A list of metric entries
  
  
.. _envoy_v3_api_msg_service.metrics.v3.StreamMetricsMessage.Identifier:

service.metrics.v3.StreamMetricsMessage.Identifier
--------------------------------------------------

`[service.metrics.v3.StreamMetricsMessage.Identifier proto] <https://github.com/envoyproxy/envoy/blob/e29e3c0569c548e267f153ec20f4032b09f001a8/api/envoy/service/metrics/v3/metrics_service.proto#L38>`_


.. code-block:: json

  {
    "node": "{...}"
  }

.. _envoy_v3_api_field_service.metrics.v3.StreamMetricsMessage.Identifier.node:

node
  (:ref:`config.core.v3.Node <envoy_v3_api_msg_config.core.v3.Node>`, *REQUIRED*) The node sending metrics over the stream.
  
  


