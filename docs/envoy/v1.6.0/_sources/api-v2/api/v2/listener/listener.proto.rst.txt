.. _envoy_api_file_envoy/api/v2/listener/listener.proto:

Listener components
===================

Listener :ref:`configuration overview <config_listeners>`

.. _envoy_api_msg_listener.Filter:

listener.Filter
---------------

`[listener.Filter proto] <https://github.com/envoyproxy/data-plane-api/blob/master/envoy/api/v2/listener/listener.proto#L20>`_


.. code-block:: json

  {
    "name": "...",
    "config": "{...}"
  }

.. _envoy_api_field_listener.Filter.name:

name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) The name of the filter to instantiate. The name must match a supported
  filter. The built-in filters are:
  
  * :ref:`envoy.client_ssl_auth<config_network_filters_client_ssl_auth>`
  * :ref:`envoy.echo <config_network_filters_echo>`
  * :ref:`envoy.http_connection_manager <config_http_conn_man>`
  * :ref:`envoy.mongo_proxy <config_network_filters_mongo_proxy>`
  * :ref:`envoy.ratelimit <config_network_filters_rate_limit>`
  * :ref:`envoy.redis_proxy <config_network_filters_redis_proxy>`
  * :ref:`envoy.tcp_proxy <config_network_filters_tcp_proxy>`
  
  
.. _envoy_api_field_listener.Filter.config:

config
  (`Struct <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`_) Filter specific configuration which depends on the filter being
  instantiated. See the supported filters for further documentation.
  
  



.. _envoy_api_msg_listener.FilterChainMatch:

listener.FilterChainMatch
-------------------------

`[listener.FilterChainMatch proto] <https://github.com/envoyproxy/data-plane-api/blob/master/envoy/api/v2/listener/listener.proto#L49>`_

Specifies the match criteria for selecting a specific filter chain for a
listener.

.. code-block:: json

  {
    "sni_domains": []
  }

.. _envoy_api_field_listener.FilterChainMatch.sni_domains:

sni_domains
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) If non-empty, the SNI domains to consider. May contain a wildcard prefix,
  e.g. ``*.example.com``.
  
  .. attention::
  
    See the :ref:`FAQ entry <faq_how_to_setup_sni>` on how to configure SNI for more
    information.
  
  








.. _envoy_api_msg_listener.FilterChain:

listener.FilterChain
--------------------

`[listener.FilterChain proto] <https://github.com/envoyproxy/data-plane-api/blob/master/envoy/api/v2/listener/listener.proto#L93>`_

A filter chain wraps a set of match criteria, an option TLS context, a set of filters, and
various other parameters.

.. code-block:: json

  {
    "filter_chain_match": "{...}",
    "tls_context": "{...}",
    "filters": [],
    "use_proxy_proto": "{...}",
    "transport_socket": "{...}"
  }

.. _envoy_api_field_listener.FilterChain.filter_chain_match:

filter_chain_match
  (:ref:`listener.FilterChainMatch <envoy_api_msg_listener.FilterChainMatch>`) The criteria to use when matching a connection to this filter chain.
  
  
.. _envoy_api_field_listener.FilterChain.tls_context:

tls_context
  (:ref:`auth.DownstreamTlsContext <envoy_api_msg_auth.DownstreamTlsContext>`) The TLS context for this filter chain.
  
  
.. _envoy_api_field_listener.FilterChain.filters:

filters
  (:ref:`listener.Filter <envoy_api_msg_listener.Filter>`) A list of individual network filters that make up the filter chain for
  connections established with the listener. Order matters as the filters are
  processed sequentially as connection events happen. Note: If the filter
  list is empty, the connection will close by default.
  
  
.. _envoy_api_field_listener.FilterChain.use_proxy_proto:

use_proxy_proto
  (`BoolValue <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#boolvalue>`_) Whether the listener should expect a PROXY protocol V1 header on new
  connections. If this option is enabled, the listener will assume that that
  remote address of the connection is the one specified in the header. Some
  load balancers including the AWS ELB support this option. If the option is
  absent or set to false, Envoy will use the physical peer address of the
  connection as the remote address.
  
  

.. _envoy_api_field_listener.FilterChain.transport_socket:

transport_socket
  (:ref:`core.TransportSocket <envoy_api_msg_core.TransportSocket>`) See :ref:`base.TransportSocket<envoy_api_msg_core.TransportSocket>` description.
  
  


.. _envoy_api_msg_listener.ListenerFilter:

listener.ListenerFilter
-----------------------

`[listener.ListenerFilter proto] <https://github.com/envoyproxy/data-plane-api/blob/master/envoy/api/v2/listener/listener.proto#L121>`_


.. code-block:: json

  {
    "name": "...",
    "config": "{...}"
  }

.. _envoy_api_field_listener.ListenerFilter.name:

name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) The name of the filter to instantiate. The name must match a supported
  filter. The built-in filters are:
  
  * :ref:`envoy.listener.original_dst <config_listener_filters_original_dst>`
  
  
.. _envoy_api_field_listener.ListenerFilter.config:

config
  (`Struct <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`_) Filter specific configuration which depends on the filter being
  instantiated. See the supported filters for further documentation.
  
  

