.. _envoy_api_file_api/filter/network/rate_limit.proto:

Rate limit
==========

Rate limit :ref:`configuration overview <config_network_filters_rate_limit>`.

.. _envoy_api_msg_filter.network.RateLimit:

filter.network.RateLimit
------------------------

`[filter.network.RateLimit proto] <https://github.com/envoyproxy/data-plane-api/blob/master/api/filter/network/rate_limit.proto#L12>`_


.. code-block:: json

  {
    "stat_prefix": "...",
    "domain": "...",
    "descriptors": [],
    "timeout": "{...}"
  }

.. _envoy_api_field_filter.network.RateLimit.stat_prefix:

stat_prefix
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) The prefix to use when emitting :ref:`statistics <config_network_filters_rate_limit_stats>`.
  
  
.. _envoy_api_field_filter.network.RateLimit.domain:

domain
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) The rate limit domain to use in the rate limit service request.
  
  
.. _envoy_api_field_filter.network.RateLimit.descriptors:

descriptors
  (:ref:`RateLimitDescriptor <envoy_api_msg_RateLimitDescriptor>`, *REQUIRED*) The rate limit descriptor list to use in the rate limit service request.
  
  
.. _envoy_api_field_filter.network.RateLimit.timeout:

timeout
  (`Duration <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration>`_) The timeout in milliseconds for the rate limit service RPC. If not
  set, this defaults to 20ms.
  
  

